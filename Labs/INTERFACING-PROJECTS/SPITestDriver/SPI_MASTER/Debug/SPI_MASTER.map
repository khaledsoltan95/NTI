Archive member included because of file (symbol)

d:/embedded_system/diploma 2023/tools/avr tools/sdk/sdk_win_64/sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_mulsi3.o)
                              ./MAP.o (__mulsi3)
d:/embedded_system/diploma 2023/tools/avr tools/sdk/sdk_win_64/sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_divmodsi4.o)
                              ./MAP.o (__divmodsi4)
d:/embedded_system/diploma 2023/tools/avr tools/sdk/sdk_win_64/sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                              d:/embedded_system/diploma 2023/tools/avr tools/sdk/sdk_win_64/sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o (exit)
d:/embedded_system/diploma 2023/tools/avr tools/sdk/sdk_win_64/sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                              ./SPI_Prog.o (__do_clear_bss)
d:/embedded_system/diploma 2023/tools/avr tools/sdk/sdk_win_64/sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodsi4.o)
                              d:/embedded_system/diploma 2023/tools/avr tools/sdk/sdk_win_64/sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_divmodsi4.o) (__udivmodsi4)

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD d:/embedded_system/diploma 2023/tools/avr tools/sdk/sdk_win_64/sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
LOAD ./DIO_Prog.o
LOAD ./MAP.o
LOAD ./PORT_Prog.o
LOAD ./SPI_Prog.o
LOAD ./main.o
LOAD d:/embedded_system/diploma 2023/tools/avr tools/sdk/sdk_win_64/sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a
LOAD d:/embedded_system/diploma 2023/tools/avr tools/sdk/sdk_win_64/sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a
LOAD d:/embedded_system/diploma 2023/tools/avr tools/sdk/sdk_win_64/sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0xc68
 *(.vectors)
 .vectors       0x00000000       0x54 d:/embedded_system/diploma 2023/tools/avr tools/sdk/sdk_win_64/sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x00000054                . = ALIGN (0x2)
                0x00000054                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000054        0x0 linker stubs
 *(.trampolines*)
                0x00000054                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000054                __ctors_start = .
 *(.ctors)
                0x00000054                __ctors_end = .
                0x00000054                __dtors_start = .
 *(.dtors)
                0x00000054                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000054        0x0 d:/embedded_system/diploma 2023/tools/avr tools/sdk/sdk_win_64/sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
                0x00000054                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000054        0xc d:/embedded_system/diploma 2023/tools/avr tools/sdk/sdk_win_64/sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000060       0x10 d:/embedded_system/diploma 2023/tools/avr tools/sdk/sdk_win_64/sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                0x00000060                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000070        0x8 d:/embedded_system/diploma 2023/tools/avr tools/sdk/sdk_win_64/sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 *(.init9)
 *(.text)
 .text          0x00000078        0x4 d:/embedded_system/diploma 2023/tools/avr tools/sdk/sdk_win_64/sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
                0x00000078                __vector_1
                0x00000078                __bad_interrupt
                0x00000078                __vector_6
                0x00000078                __vector_3
                0x00000078                __vector_11
                0x00000078                __vector_13
                0x00000078                __vector_17
                0x00000078                __vector_19
                0x00000078                __vector_7
                0x00000078                __vector_5
                0x00000078                __vector_4
                0x00000078                __vector_9
                0x00000078                __vector_2
                0x00000078                __vector_15
                0x00000078                __vector_8
                0x00000078                __vector_14
                0x00000078                __vector_10
                0x00000078                __vector_16
                0x00000078                __vector_18
                0x00000078                __vector_20
 .text          0x0000007c        0x0 ./DIO_Prog.o
 .text          0x0000007c        0x0 ./MAP.o
 .text          0x0000007c        0x0 ./PORT_Prog.o
 .text          0x0000007c        0x0 ./SPI_Prog.o
 .text          0x0000007c        0x0 ./main.o
 .text          0x0000007c        0x0 d:/embedded_system/diploma 2023/tools/avr tools/sdk/sdk_win_64/sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_mulsi3.o)
 .text          0x0000007c        0x0 d:/embedded_system/diploma 2023/tools/avr tools/sdk/sdk_win_64/sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_divmodsi4.o)
 .text          0x0000007c        0x0 d:/embedded_system/diploma 2023/tools/avr tools/sdk/sdk_win_64/sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .text          0x0000007c        0x0 d:/embedded_system/diploma 2023/tools/avr tools/sdk/sdk_win_64/sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 .text          0x0000007c        0x0 d:/embedded_system/diploma 2023/tools/avr tools/sdk/sdk_win_64/sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodsi4.o)
                0x0000007c                . = ALIGN (0x2)
 *(.text.*)
 .text.DIO_U8SetPinDirection
                0x0000007c      0x224 ./DIO_Prog.o
                0x0000007c                DIO_U8SetPinDirection
 .text.DIO_U8SetPortDirection
                0x000002a0       0x90 ./DIO_Prog.o
                0x000002a0                DIO_U8SetPortDirection
 .text.DIO_U8SetPinValue
                0x00000330      0x224 ./DIO_Prog.o
                0x00000330                DIO_U8SetPinValue
 .text.DIO_U8SetPortValue
                0x00000554       0x90 ./DIO_Prog.o
                0x00000554                DIO_U8SetPortValue
 .text.DIO_u8GetPinValue
                0x000005e4      0x136 ./DIO_Prog.o
                0x000005e4                DIO_u8GetPinValue
 .text.DIO_u8TogglePinValue
                0x0000071a      0x116 ./DIO_Prog.o
                0x0000071a                DIO_u8TogglePinValue
 .text.MAP      0x00000830      0x136 ./MAP.o
                0x00000830                MAP
 .text.PORT_voidInit
                0x00000966       0x40 ./PORT_Prog.o
                0x00000966                PORT_voidInit
 .text.SPI_voidInitial
                0x000009a6       0x8c ./SPI_Prog.o
                0x000009a6                SPI_voidInitial
 .text.SPI_voidInit
                0x00000a32       0x90 ./SPI_Prog.o
                0x00000a32                SPI_voidInit
 .text.SPI_u8Transceive
                0x00000ac2       0x32 ./SPI_Prog.o
                0x00000ac2                SPI_u8Transceive
 .text.SPI_u8SetCallBack
                0x00000af4       0x3a ./SPI_Prog.o
                0x00000af4                SPI_u8SetCallBack
 .text.__vector_12
                0x00000b2e       0x66 ./SPI_Prog.o
                0x00000b2e                __vector_12
 .text.main     0x00000b94       0x18 ./main.o
                0x00000b94                main
 .text.libgcc   0x00000bac       0x3e d:/embedded_system/diploma 2023/tools/avr tools/sdk/sdk_win_64/sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_mulsi3.o)
                0x00000bac                __mulsi3
 .text.libgcc   0x00000bea       0x36 d:/embedded_system/diploma 2023/tools/avr tools/sdk/sdk_win_64/sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_divmodsi4.o)
                0x00000bea                __divmodsi4
 .text.libgcc   0x00000c20        0x0 d:/embedded_system/diploma 2023/tools/avr tools/sdk/sdk_win_64/sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .text.libgcc   0x00000c20        0x0 d:/embedded_system/diploma 2023/tools/avr tools/sdk/sdk_win_64/sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 .text.libgcc   0x00000c20       0x44 d:/embedded_system/diploma 2023/tools/avr tools/sdk/sdk_win_64/sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodsi4.o)
                0x00000c20                __udivmodsi4
                0x00000c64                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000c64        0x0 d:/embedded_system/diploma 2023/tools/avr tools/sdk/sdk_win_64/sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                0x00000c64                exit
                0x00000c64                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000c64        0x4 d:/embedded_system/diploma 2023/tools/avr tools/sdk/sdk_win_64/sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 *(.fini0)
                0x00000c68                _etext = .

.data           0x00800060        0x0 load address 0x00000c68
                0x00800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800060        0x0 d:/embedded_system/diploma 2023/tools/avr tools/sdk/sdk_win_64/sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 .data          0x00800060        0x0 ./DIO_Prog.o
 .data          0x00800060        0x0 ./MAP.o
 .data          0x00800060        0x0 ./PORT_Prog.o
 .data          0x00800060        0x0 ./SPI_Prog.o
 .data          0x00800060        0x0 ./main.o
 .data          0x00800060        0x0 d:/embedded_system/diploma 2023/tools/avr tools/sdk/sdk_win_64/sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_mulsi3.o)
 .data          0x00800060        0x0 d:/embedded_system/diploma 2023/tools/avr tools/sdk/sdk_win_64/sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_divmodsi4.o)
 .data          0x00800060        0x0 d:/embedded_system/diploma 2023/tools/avr tools/sdk/sdk_win_64/sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .data          0x00800060        0x0 d:/embedded_system/diploma 2023/tools/avr tools/sdk/sdk_win_64/sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 .data          0x00800060        0x0 d:/embedded_system/diploma 2023/tools/avr tools/sdk/sdk_win_64/sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodsi4.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x00800060                . = ALIGN (0x2)
                0x00800060                _edata = .
                0x00800060                PROVIDE (__data_end, .)

.bss            0x00800060        0x2
                0x00800060                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00800060        0x0 d:/embedded_system/diploma 2023/tools/avr tools/sdk/sdk_win_64/sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 .bss           0x00800060        0x0 ./DIO_Prog.o
 .bss           0x00800060        0x0 ./MAP.o
 .bss           0x00800060        0x0 ./PORT_Prog.o
 .bss           0x00800060        0x0 ./SPI_Prog.o
 .bss           0x00800060        0x0 ./main.o
 .bss           0x00800060        0x0 d:/embedded_system/diploma 2023/tools/avr tools/sdk/sdk_win_64/sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_mulsi3.o)
 .bss           0x00800060        0x0 d:/embedded_system/diploma 2023/tools/avr tools/sdk/sdk_win_64/sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_divmodsi4.o)
 .bss           0x00800060        0x0 d:/embedded_system/diploma 2023/tools/avr tools/sdk/sdk_win_64/sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .bss           0x00800060        0x0 d:/embedded_system/diploma 2023/tools/avr tools/sdk/sdk_win_64/sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 .bss           0x00800060        0x0 d:/embedded_system/diploma 2023/tools/avr tools/sdk/sdk_win_64/sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodsi4.o)
 *(.bss*)
 .bss.SPI_pvNotificationFunc
                0x00800060        0x2 ./SPI_Prog.o
 *(COMMON)
                0x00800062                PROVIDE (__bss_end, .)
                0x00000c68                __data_load_start = LOADADDR (.data)
                0x00000c68                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00800062        0x0
                0x00800062                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00800062                PROVIDE (__noinit_end, .)
                0x00800062                _end = .
                0x00800062                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x00000000     0x10ec
 *(.stab)
 .stab          0x00000000      0x7d4 ./DIO_Prog.o
 .stab          0x000007d4      0x198 ./MAP.o
                                0x21c (size before relaxing)
 .stab          0x0000096c      0x168 ./PORT_Prog.o
                                0x1ec (size before relaxing)
 .stab          0x00000ad4      0x33c ./SPI_Prog.o
                                0x3c0 (size before relaxing)
 .stab          0x00000e10      0x2dc ./main.o
                                0x3cc (size before relaxing)

.stabstr        0x00000000      0xbcf
 *(.stabstr)
 .stabstr       0x00000000      0xbcf ./DIO_Prog.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(SPI_MASTER.elf elf32-avr)
LOAD linker stubs
